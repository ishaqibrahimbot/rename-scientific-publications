So, I am going to try and make a web app that will be deployed to Heroku and will do this:

- A user can upload a list of pdfs that have weird non-self-explanatory names (usually happens in the case of research paper)
- As an output, they will get a zip file with all those pdf files renamed with the title of the pdf file
- In the case of research papers, the new filename will be the year and the title and this will be straightforward to extract (or so I hope)
- As for other pdf documents, will need to figure out a different strategy such as finding the 'topic keyword' through ML maybe (that might be a good exercise for later)

For now, let's limit the focus to just uploading research papers.

So the front-end will have:
- A page where you can drag and drop or upload a range of files
- These files are then sent to the backend for processing
- Once we receive the zipped file containing all renamed pdf files, display a download option that lets users download each file

At the backend:
- Take a pdf file, read it, find the title and the year through Grobid (or some other way), and rename the file
- Take all the renamed files, package them inside a zip file, and send it back to be downloaded

Let's break this down into smaller challenges:
1- (DONE)Take a downloaded pdf and figure out how to use Grobid to extract its title and year of publication
2- (DONE)Figure out how to rename a file in python once you have the new filename decided (should be fairly easy)
3- (DONE)Figure out how to handle a file at the backend (will I need to use a database?)
4- (DONE)Figure out how to zip a file and send it back to the front end
5- Make an HTML template with CSS styling for the page where a user can upload pdfs
6- Make an HTML template with CSS styling for the page where they will download
7- (DONE)Figure out how to allow users to download something from the front-end
8- (DONE)Use the grobid client inside the rename script (i.e. have an end-to-end script that takes pdfs and renames them)
9- (DONE)Figure out how to receive and handle multiple files at the backend
10- Merge the grobid processing functionality with the uploads functionality

Once this app is running properly on my local computer, I will then have to figure out how to deploy this to heroku.

That sounds good. Let's start tackling each of these challenges.
